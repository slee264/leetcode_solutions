/**
 * https://leetcode.com/problems/insertion-sort-list/description/
 * Given the head of a singly linked list, sort the list using insertion sort, and return the sorted list's head.
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode insertionSortList(ListNode head) {
        ListNode dummy_head = new ListNode();
        ListNode curr = head;

        while(curr != null){
            ListNode sorted_node = dummy_head;

            while(sorted_node.next != null && sorted_node.next.val <= curr.val){
                sorted_node = sorted_node.next;
            }

            ListNode next = curr.next;
            curr.next = sorted_node.next;
            sorted_node.next = curr;
            curr = next;
        }

        return dummy_head.next;
    }
}
