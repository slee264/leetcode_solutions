/**
https://leetcode.com/problems/reverse-subarray-to-maximize-array-value/description/
**/

class Solution:
    def maxValueAfterReverse(self, nums: List[int]) -> int:
        smallest_bigger, biggest_smaller = math.inf, -math.inf

        for a, b in zip(nums, nums[1:]):
            smallest_bigger = min(max(a,b), smallest_bigger)
            biggest_smaller = max(min(a,b), biggest_smaller)

        change = max(0, (biggest_smaller - smallest_bigger) * 2)

        for a, b in zip(nums, nums[1:]):
            tmp1 = -abs(a-b) + abs(b - nums[0])
            tmp2 = -abs(a-b) + abs(a - nums[-1])
            change = max([tmp1, tmp2, change])
        
        original_sum = sum(abs(a-b) for a, b in zip(nums, nums[1:]))
        
        return original_sum + change
            
