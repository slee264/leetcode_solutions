/**
* https://leetcode.com/problems/minimum-time-visiting-all-points/description/
* On a 2D plane, there are n points with integer coordinates points[i] = [xi, yi]. 
* Return the minimum time in seconds to visit all the points in the order given by points.
**/
class Solution {

    int time = 0;

    public int minTimeToVisitAllPoints(int[][] points) {
        for(int i = 0; i < points.length - 1; i++){
            int x_diff = Math.abs(points[i][0] - points[i+1][0]);
            int y_diff = Math.abs(points[i][1] - points[i+1][1]);

            int smaller_diff = Math.min(x_diff, y_diff);
            if(smaller_diff == x_diff){
                //move horizontally
                time += x_diff;
                
                //move vertically
                time += y_diff - x_diff;
            }else if(smaller_diff == y_diff){
                //move horizontally
                time += y_diff;

                time += x_diff - y_diff;
            }else{
                time += x_diff;
            }
        }
        return time;
    }

}
