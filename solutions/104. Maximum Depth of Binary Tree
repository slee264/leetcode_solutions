# https://leetcode.com/problems/maximum-depth-of-binary-tree/submissions/887411252/
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def maxDepth(self, root: Optional[TreeNode]) -> int:
        if not root:
            return 0
        queue = []
        queue.append((root, 1))
        max_depth = -math.inf
        while queue:
            node, depth = queue.pop(0)
            if depth > max_depth:
                max_depth = depth

            if node.left:
                queue.append((node.left, depth + 1))

            if node.right:
                queue.append((node.right, depth + 1))

        print(max_depth)

        return max_depth
